App.py:

from flask import Flask, jsonify, request, send_from_directory
import mysql.connector

app = Flask(__name__, static_url_path='', static_folder='static', template_folder='templates')

# Database configuration
db_config = {
? ? 'user': 'root',
? ? 'password': 'Pratyusha',
? ? 'host': 'localhost',
? ? 'database': 'taskboard_db'
}

def get_db_connection():
? ? return mysql.connector.connect(**db_config)

@app.route('/')
def index():
? ? return send_from_directory('templates', 'index.html')

@app.route('/tasks', methods=['GET'])
def get_all_tasks():
? ? conn = get_db_connection()
? ? cursor = conn.cursor(dictionary=True)
? ? cursor.execute('SELECT * FROM tasks')
? ? tasks = cursor.fetchall()
? ? conn.close()
? ? return jsonify(tasks)

@app.route('/tasks/in-progress', methods=['GET'])
def get_in_progress_tasks():
? ? conn = get_db_connection()
? ? cursor = conn.cursor(dictionary=True)
? ? cursor.execute('SELECT * FROM tasks WHERE status = "in progress"')
? ? tasks = cursor.fetchall()
? ? conn.close()
? ? return jsonify(tasks)

@app.route('/tasks/completed', methods=['GET'])
def get_completed_tasks():
? ? conn = get_db_connection()
? ? cursor = conn.cursor(dictionary=True)
? ? cursor.execute('SELECT * FROM tasks WHERE status = "completed"')
? ? tasks = cursor.fetchall()
? ? conn.close()
? ? return jsonify(tasks)

@app.route('/tasks/pending', methods=['GET'])
def get_pending_tasks():
? ? conn = get_db_connection()
? ? cursor = conn.cursor(dictionary=True)
? ? cursor.execute('SELECT * FROM tasks WHERE status = "pending"')
? ? tasks = cursor.fetchall()
? ? conn.close()
? ? return jsonify(tasks)

@app.route('/tasks', methods=['POST'])
def create_task():
? ? new_task = request.get_json()
? ? conn = get_db_connection()
? ? cursor = conn.cursor()
? ? cursor.execute('INSERT INTO tasks (task_number, task_name, task_description, status) VALUES (%s, %s, %s, %s)',
? ? ? ? ? ? ? ? ? ?(new_task['task_number'], new_task['task_name'], new_task['task_description'], new_task['status']))
? ? conn.commit()
? ? conn.close()
? ? return jsonify({'message': 'Task created successfully'}), 201

@app.route('/tasks/<int:task_id>', methods=['PATCH'])
def update_task_status(task_id):
? ? new_status = request.json['status']
? ? conn = get_db_connection()
? ? cursor = conn.cursor()
? ? cursor.execute('UPDATE tasks SET status = %s WHERE id = %s', (new_status, task_id))
? ? conn.commit()
? ? conn.close()
? ? return jsonify({'message': 'Task status updated successfully'})

if __name__ == '__main__':
? ? app.run(debug=True)





html:
<!DOCTYPE html>
<html lang="en">
<head>
? ? <meta charset="UTF-8">
? ? <meta name="viewport" content="width=device-width, initial-scale=1.0">
? ? <title>Task Management System</title>
? ? <link rel="stylesheet" href="style.css">
? ? <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
? ? <div class="container mt-5">
? ? ? ? <h1 class="text-center">Task Management System</h1>
? ? ? ? <div class="row mt-4">
? ? ? ? ? ? <div class="col-md-12">
? ? ? ? ? ? ? ? <h2 class="text-center">All Tasks</h2>
? ? ? ? ? ? ? ? <ul id="all-tasks" class="list-group mb-4"></ul>
? ? ? ? ? ? </div>
? ? ? ? ? ? <div class="col-md-12">
? ? ? ? ? ? ? ? <h2 class="text-center">Pending Tasks</h2>
? ? ? ? ? ? ? ? <ul id="pending-tasks" class="list-group mb-4"></ul>
? ? ? ? ? ? </div>
? ? ? ? ? ? <div class="col-md-12">
? ? ? ? ? ? ? ? <h2 class="text-center">In Progress Tasks</h2>
? ? ? ? ? ? ? ? <ul id="in-progress-tasks" class="list-group mb-4"></ul>
? ? ? ? ? ? </div>
? ? ? ? ? ? <div class="col-md-12">
? ? ? ? ? ? ? ? <h2 class="text-center">Completed Tasks</h2>
? ? ? ? ? ? ? ? <ul id="completed-tasks" class="list-group mb-4"></ul>
? ? ? ? ? ? </div>
? ? ? ? </div>
? ? ? ? <div class="mt-4 text-center">
? ? ? ? ? ? <button class="btn btn-primary" data-toggle="modal" data-target="#createTaskModal">Create New Task</button>
? ? ? ? </div>
? ? </div>

? ? <!-- Create Task Modal -->
? ? <div class="modal fade" id="createTaskModal" tabindex="-1" aria-labelledby="createTaskModalLabel" aria-hidden="true">
? ? ? ? <div class="modal-dialog">
? ? ? ? ? ? <div class="modal-content">
? ? ? ? ? ? ? ? <div class="modal-header">
? ? ? ? ? ? ? ? ? ? <h5 class="modal-title" id="createTaskModalLabel">Create New Task</h5>
? ? ? ? ? ? ? ? ? ? <button type="button" class="close" data-dismiss="modal" aria-label="Close">
? ? ? ? ? ? ? ? ? ? ? ? <span aria-hidden="true">&times;</span>
? ? ? ? ? ? ? ? ? ? </button>
? ? ? ? ? ? ? ? </div>
? ? ? ? ? ? ? ? <div class="modal-body">
? ? ? ? ? ? ? ? ? ? <form id="createTaskForm">
? ? ? ? ? ? ? ? ? ? ? ? <div class="form-group">
? ? ? ? ? ? ? ? ? ? ? ? ? ? <label for="taskNumber">Task Number</label>
? ? ? ? ? ? ? ? ? ? ? ? ? ? <input type="number" class="form-control" id="taskNumber" required>
? ? ? ? ? ? ? ? ? ? ? ? </div>
? ? ? ? ? ? ? ? ? ? ? ? <div class="form-group">
? ? ? ? ? ? ? ? ? ? ? ? ? ? <label for="taskName">Task Name</label>
? ? ? ? ? ? ? ? ? ? ? ? ? ? <input type="text" class="form-control" id="taskName" required>
? ? ? ? ? ? ? ? ? ? ? ? </div>
? ? ? ? ? ? ? ? ? ? ? ? <div class="form-group">
? ? ? ? ? ? ? ? ? ? ? ? ? ? <label for="taskDescription">Task Description</label>
? ? ? ? ? ? ? ? ? ? ? ? ? ? <textarea class="form-control" id="taskDescription" rows="3" required></textarea>
? ? ? ? ? ? ? ? ? ? ? ? </div>
? ? ? ? ? ? ? ? ? ? ? ? <div class="form-group">
? ? ? ? ? ? ? ? ? ? ? ? ? ? <label for="taskStatus">Status</label>
? ? ? ? ? ? ? ? ? ? ? ? ? ? <select class="form-control" id="taskStatus" required>
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? <option value="pending">Pending</option>
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? <option value="in progress">In Progress</option>
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? <option value="completed">Completed</option>
? ? ? ? ? ? ? ? ? ? ? ? ? ? </select>
? ? ? ? ? ? ? ? ? ? ? ? </div>
? ? ? ? ? ? ? ? ? ? ? ? <button type="submit" class="btn btn-primary">Create Task</button>
? ? ? ? ? ? ? ? ? ? </form>
? ? ? ? ? ? ? ? </div>
? ? ? ? ? ? </div>
? ? ? ? </div>
? ? </div>

? ? <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
? ? <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
? ? <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
? ? <script src="script.js"></script>
</body>
</html>





Script:
document.addEventListener('DOMContentLoaded', () => {
? ? fetchTasks();

? ? document.getElementById('createTaskForm').addEventListener('submit', function(e) {
? ? ? ? e.preventDefault();
? ? ? ? createTask();
? ? });
});

function fetchTasks() {
? ? fetch('/tasks')
? ? ? ? .then(response => response.json())
? ? ? ? .then(tasks => {
? ? ? ? ? ? displayTasks(tasks, 'all-tasks');
? ? ? ? ? ? displayTasks(tasks.filter(task => task.status === 'pending'), 'pending-tasks');
? ? ? ? ? ? displayTasks(tasks.filter(task => task.status === 'in progress'), 'in-progress-tasks');
? ? ? ? ? ? displayTasks(tasks.filter(task => task.status === 'completed'), 'completed-tasks');
? ? ? ? });
}

function displayTasks(tasks, elementId) {
? ? const taskList = document.getElementById(elementId);
? ? taskList.innerHTML = '';
? ? tasks.forEach(task => {
? ? ? ? const taskItem = document.createElement('li');
? ? ? ? taskItem.className = 'list-group-item task';
? ? ? ? taskItem.textContent = `${task.task_number}: ${task.task_name}`;

? ? ? ? // Add dropdown to change status
? ? ? ? const statusDropdown = document.createElement('select');
? ? ? ? statusDropdown.innerHTML = `
? ? ? ? ? ? <option value="pending" ${task.status === 'pending' ? 'selected' : ''}>Pending</option>
? ? ? ? ? ? <option value="in progress" ${task.status === 'in progress' ? 'selected' : ''}>In Progress</option>
? ? ? ? ? ? <option value="completed" ${task.status === 'completed' ? 'selected' : ''}>Completed</option>
? ? ? ? `;
? ? ? ? statusDropdown.addEventListener('change', () => {
? ? ? ? ? ? updateTaskStatus(task.id, statusDropdown.value);
? ? ? ? });

? ? ? ? taskItem.appendChild(statusDropdown);
? ? ? ? taskList.appendChild(taskItem);
? ? });
}

function updateTaskStatus(taskId, newStatus) {
? ? fetch(`/tasks/${taskId}`, {
? ? ? ? method: 'PATCH',
? ? ? ? headers: {
? ? ? ? ? ? 'Content-Type': 'application/json'
? ? ? ? },
? ? ? ? body: JSON.stringify({ status: newStatus })
? ? })
? ? .then(response => response.json())
? ? .then(data => {
? ? ? ? alert(data.message);
? ? ? ? fetchTasks();
? ? });
}

function createTask() {
? ? const taskNumber = document.getElementById('taskNumber').value;
? ? const taskName = document.getElementById('taskName').value;
? ? const taskDescription = document.getElementById('taskDescription').value;
? ? const taskStatus = document.getElementById('taskStatus').value;

? ? fetch('/tasks', {
? ? ? ? method: 'POST',
? ? ? ? headers: {
? ? ? ? ? ? 'Content-Type': 'application/json'
? ? ? ? },
? ? ? ? body: JSON.stringify({
? ? ? ? ? ? task_number: taskNumber,
? ? ? ? ? ? task_name: taskName,
? ? ? ? ? ? task_description: taskDescription,
? ? ? ? ? ? status: taskStatus
? ? ? ? })
? ? })
? ? .then(response => response.json())
? ? .then(data => {
? ? ? ? alert(data.message);
? ? ? ? fetchTasks();
? ? ? ? $('#createTaskModal').modal('hide');
? ? ? ? document.getElementById('createTaskForm').reset();
? ? });
}


http://127.0.0.1:5000/

